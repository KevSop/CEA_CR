/*
insert license info here
*/
using System;

namespace DataAccess.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class MenuSendManage
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private long _id; 
		private string _sendno; 
		private string _consumerno; 
		private string _ordersno; 
		private string _reachtime; 
		private string _taste; 
		private string _msm_sendstatus; 
		private string _senduser; 
		private string _createuser; 
		private DateTime _createtime; 
		private string _upduser; 
		private DateTime _updtime; 
		private string _reason; 
		private string _consumerphone; 
		private string _province; 
		private string _city; 
		private string _county; 
		private string _street; 
		private string _remark; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public MenuSendManage()
		{
			_id = 0; 
			_sendno = null; 
			_consumerno = null; 
			_ordersno = null; 
			_reachtime = null; 
			_taste = null; 
			_msm_sendstatus = null; 
			_senduser = null; 
			_createuser = null; 
			_createtime = new DateTime(); 
			_upduser = null; 
			_updtime = new DateTime(); 
			_reason = null; 
			_consumerphone = null; 
			_province = null; 
			_city = null; 
			_county = null; 
			_street = null; 
			_remark = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public long Id
		{
			get { return _id; }
			set { _isChanged |= (_id != value); _id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SendNo
		{
			get { return _sendno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for SendNo", value, value.ToString());
				
				_isChanged |= (_sendno != value); _sendno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ConsumerNo
		{
			get { return _consumerno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for ConsumerNo", value, value.ToString());
				
				_isChanged |= (_consumerno != value); _consumerno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OrdersNo
		{
			get { return _ordersno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for OrdersNo", value, value.ToString());
				
				_isChanged |= (_ordersno != value); _ordersno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ReachTime
		{
			get { return _reachtime; }
			set	
			{
				if( value!= null && value.Length > 5)
					throw new ArgumentOutOfRangeException("Invalid value for ReachTime", value, value.ToString());
				
				_isChanged |= (_reachtime != value); _reachtime = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Taste
		{
			get { return _taste; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Taste", value, value.ToString());
				
				_isChanged |= (_taste != value); _taste = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MsmSendStatus
		{
			get { return _msm_sendstatus; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for MsmSendStatus", value, value.ToString());
				
				_isChanged |= (_msm_sendstatus != value); _msm_sendstatus = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SendUser
		{
			get { return _senduser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for SendUser", value, value.ToString());
				
				_isChanged |= (_senduser != value); _senduser = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CreateUser
		{
			get { return _createuser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for CreateUser", value, value.ToString());
				
				_isChanged |= (_createuser != value); _createuser = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime CreateTime
		{
			get { return _createtime; }
			set { _isChanged |= (_createtime != value); _createtime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string UpdUser
		{
			get { return _upduser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for UpdUser", value, value.ToString());
				
				_isChanged |= (_upduser != value); _upduser = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime UpdTime
		{
			get { return _updtime; }
			set { _isChanged |= (_updtime != value); _updtime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Reason
		{
			get { return _reason; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Reason", value, value.ToString());
				
				_isChanged |= (_reason != value); _reason = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ConsumerPhone
		{
			get { return _consumerphone; }
			set	
			{
				if( value!= null && value.Length > 11)
					throw new ArgumentOutOfRangeException("Invalid value for ConsumerPhone", value, value.ToString());
				
				_isChanged |= (_consumerphone != value); _consumerphone = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Province
		{
			get { return _province; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for Province", value, value.ToString());
				
				_isChanged |= (_province != value); _province = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string City
		{
			get { return _city; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for City", value, value.ToString());
				
				_isChanged |= (_city != value); _city = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string County
		{
			get { return _county; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for County", value, value.ToString());
				
				_isChanged |= (_county != value); _county = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Street
		{
			get { return _street; }
			set	
			{
				if( value!= null && value.Length >50)
					throw new ArgumentOutOfRangeException("Invalid value for Street", value, value.ToString());
				
				_isChanged |= (_street != value); _street = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Remark
		{
			get { return _remark; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for Remark", value, value.ToString());
				
				_isChanged |= (_remark != value); _remark = value;
			}
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
