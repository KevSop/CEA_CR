/*
insert license info here
*/
using System;
using Microsoft.Practices.Prism.ViewModel;

namespace DataAccess.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class DiscountMaster : NotificationObject
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private long _id; 
		private string _discountno; 
		private string _discountname; 
		private DateTime _starttime; 
		private DateTime _endtime; 
		private string _bigtype; 
		private string _middletype; 
		private string _smalltype; 
		private string _menucode; 
		private string _marketcode; 
		private string _discountday; 
		private string _condition; 
		private string _style; 
		private string _createuser; 
		private DateTime _createtime; 
		private string _upduser; 
		private DateTime _updtime; 
		private long _isdelete; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public DiscountMaster()
		{
			_id = 0; 
			_discountno = null; 
			_discountname = null; 
			_starttime = DateTime.Now;
            _endtime = DateTime.Now; 
			_bigtype = null; 
			_middletype = null; 
			_smalltype = null; 
			_menucode = null; 
			_marketcode = null; 
			_discountday = null; 
			_condition = null; 
			_style = null; 
			_createuser = null;
            _createtime = DateTime.Now; 
			_upduser = null;
            _updtime = DateTime.Now; 
			_isdelete = 0; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public long Id
		{
			get { return _id; }
            set { _isChanged |= (_id != value); _id = value; RaisePropertyChanged("ID"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string DiscountNo
		{
			get { return _discountno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for DiscountNo", value, value.ToString());

                _isChanged |= (_discountno != value); _discountno = value; RaisePropertyChanged("DiscountNo");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string DiscountName
		{
			get { return _discountname; }
			set	
			{
				if( value!= null && value.Length > 15)
					throw new ArgumentOutOfRangeException("Invalid value for DiscountName", value, value.ToString());

                _isChanged |= (_discountname != value); _discountname = value; RaisePropertyChanged("DiscountName");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime StartTime
		{
			get { return _starttime; }
            set { _isChanged |= (_starttime != value); _starttime = value; RaisePropertyChanged("StartTime"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime EndTime
		{
			get { return _endtime; }
            set { _isChanged |= (_endtime != value); _endtime = value; RaisePropertyChanged("EndTime"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string BigType
		{
			get { return _bigtype; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for BigType", value, value.ToString());

                _isChanged |= (_bigtype != value); _bigtype = value; RaisePropertyChanged("BigType");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MiddleType
		{
			get { return _middletype; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for MiddleType", value, value.ToString());

                _isChanged |= (_middletype != value); _middletype = value; RaisePropertyChanged("MiddleType");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SmallType
		{
			get { return _smalltype; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for SmallType", value, value.ToString());

                _isChanged |= (_smalltype != value); _smalltype = value; RaisePropertyChanged("SmallType");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MenuCode
		{
			get { return _menucode; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for MenuCode", value, value.ToString());

                _isChanged |= (_menucode != value); _menucode = value; RaisePropertyChanged("MenuCode");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MarketCode
		{
			get { return _marketcode; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for MarketCode", value, value.ToString());

                _isChanged |= (_marketcode != value); _marketcode = value; RaisePropertyChanged("MarketCode");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string DiscountDay
		{
			get { return _discountday; }
			set	
			{
				if( value!= null && value.Length >30)
					throw new ArgumentOutOfRangeException("Invalid value for DiscountDay", value, value.ToString());

                _isChanged |= (_discountday != value); _discountday = value; RaisePropertyChanged("DiscountDay");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Condition
		{
			get { return _condition; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Condition", value, value.ToString());

                _isChanged |= (_condition != value); _condition = value; RaisePropertyChanged("Condition");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Style
		{
			get { return _style; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for Style", value, value.ToString());

                _isChanged |= (_style != value); _style = value; RaisePropertyChanged("Style");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CreateUser
		{
			get { return _createuser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for CreateUser", value, value.ToString());

                _isChanged |= (_createuser != value); _createuser = value; RaisePropertyChanged("CreateUser");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime CreateTime
		{
			get { return _createtime; }
            set { _isChanged |= (_createtime != value); _createtime = value; RaisePropertyChanged("CreateTime"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string UpdUser
		{
			get { return _upduser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for UpdUser", value, value.ToString());

                _isChanged |= (_upduser != value); _upduser = value; RaisePropertyChanged("UpdUser");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime UpdTime
		{
			get { return _updtime; }
            set { _isChanged |= (_updtime != value); _updtime = value; RaisePropertyChanged("UpdTime"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public long IsDelete
		{
			get { return _isdelete; }
            set { _isChanged |= (_isdelete != value); _isdelete = value; RaisePropertyChanged("IsDelete"); }
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
