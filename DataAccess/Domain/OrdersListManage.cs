/*
insert license info here
*/
using System;
using Microsoft.Practices.Prism.ViewModel;

namespace DataAccess.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class OrdersListManage : NotificationObject
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private long _id; 
		private string _ordersno; 
		private string _orderstype; 
		private string _consumerno; 
		private string _seatno; 
		private float _totalmoney; 
		private float _dismoney; 
		private float _freemoney; 
		private float _clearmoney; 
		private float _paymoney; 
		private string _ordersstatus; 
		private string _paystatus; 
		private string _createuser; 
		private DateTime _createtime; 
		private string _marketno; 
		private string _upduser; 
		private DateTime _updtime; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public OrdersListManage()
		{
			_id = 0; 
			_ordersno = null; 
			_orderstype = null; 
			_consumerno = null; 
			_seatno = null; 
			_totalmoney = 0; 
			_dismoney = 0; 
			_freemoney = 0; 
			_clearmoney = 0; 
			_paymoney = 0; 
			_ordersstatus = string.Empty; 
			_paystatus = string.Empty; 
			_createuser = null; 
			_createtime = new DateTime(); 
			_marketno = null; 
			_upduser = null; 
			_updtime = new DateTime(); 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public long Id
		{
			get { return _id; }
            set { _isChanged |= (_id != value); _id = value; RaisePropertyChanged("Id"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OrdersNo
		{
			get { return _ordersno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for OrdersNo", value, value.ToString());

                _isChanged |= (_ordersno != value); _ordersno = value; RaisePropertyChanged("OrdersNo");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OrdersType
		{
			get { return _orderstype; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for OrdersType", value, value.ToString());

                _isChanged |= (_orderstype != value); _orderstype = value; RaisePropertyChanged("OrdersType");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ConsumerNo
		{
			get { return _consumerno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for ConsumerNo", value, value.ToString());

                _isChanged |= (_consumerno != value); _consumerno = value; RaisePropertyChanged("ConsumerNo");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SeatNo
		{
			get { return _seatno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for SeatNo", value, value.ToString());

                _isChanged |= (_seatno != value); _seatno = value; RaisePropertyChanged("SeatNo");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public float TotalMoney
		{
			get { return _totalmoney; }
            set { _isChanged |= (_totalmoney != value); _totalmoney = value; RaisePropertyChanged("TotalMoney"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public float DisMoney
		{
			get { return _dismoney; }
            set { _isChanged |= (_dismoney != value); _dismoney = value; RaisePropertyChanged("DisMoney"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public float FreeMoney
		{
			get { return _freemoney; }
            set { _isChanged |= (_freemoney != value); _freemoney = value; RaisePropertyChanged("FreeMoney"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public float ClearMoney
		{
			get { return _clearmoney; }
            set { _isChanged |= (_clearmoney != value); _clearmoney = value; RaisePropertyChanged("ClearMoney"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public float PayMoney
		{
			get { return _paymoney; }
            set { _isChanged |= (_paymoney != value); _paymoney = value; RaisePropertyChanged("PayMoney"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OrdersStatus
		{
			get { return _ordersstatus; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for OrdersStatus", value, value.ToString());

                _isChanged |= (_ordersstatus != value); _ordersstatus = value; RaisePropertyChanged("PayMoney");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PayStatus
		{
			get { return _paystatus; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for PayStatus", value, value.ToString());

                _isChanged |= (_paystatus != value); _paystatus = value; RaisePropertyChanged("PayStatus");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CreateUser
		{
			get { return _createuser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for CreateUser", value, value.ToString());

                _isChanged |= (_createuser != value); _createuser = value; RaisePropertyChanged("CreateUser");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime CreateTime
		{
			get { return _createtime; }
            set { _isChanged |= (_createtime != value); _createtime = value; RaisePropertyChanged("CreateTime"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MarketNo
		{
			get { return _marketno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for MarketNo", value, value.ToString());

                _isChanged |= (_marketno != value); _marketno = value; RaisePropertyChanged("MarketNo");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string UpdUser
		{
			get { return _upduser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for UpdUser", value, value.ToString());

                _isChanged |= (_upduser != value); _upduser = value; RaisePropertyChanged("UpdUser");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime UpdTime
		{
			get { return _updtime; }
            set { _isChanged |= (_updtime != value); _updtime = value; RaisePropertyChanged("UpdTime"); }
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
