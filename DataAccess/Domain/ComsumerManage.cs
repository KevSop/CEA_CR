/*
insert license info here
*/
using System;
using Microsoft.Practices.Prism.ViewModel;

namespace DataAccess.Domain
{
    /// <summary>
    ///	Generated by MyGeneration using the IBatis Object Mapping template
    /// </summary>
    [Serializable]
    public sealed class ComsumerManage : NotificationObject
    {
        #region Private Members
        private bool _isChanged;
        private bool _isDeleted;
        private long _id;
        private string _consumerno;
        private string _consumername;
        private string _accountnumber;
        private string _invoiceheadtext;
        private string _sex;
        private string _age;
        private string _consumertype;
        private string _source;
        private string _sendtype;
        private string _address;
        private string _addresstype;
        private string _zipcode;
        private string _country;
        private string _province;
        private string _city;
        private string _county;
        private string _street;
        private string _phone;
        private string _cardno;
        private string _sendcardchannel;
        private string _cardtype;
        private DateTime _birthday;
        private string _consumetype;
        private string _activearea;
        private long _ismember;
        private string _createuser;
        private DateTime _createtime;
        private string _upduser;
        private DateTime _updtime;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ComsumerManage()
        {
            _id = 0;
            _consumerno = null;
            _consumername = null;
            _accountnumber = null;
            _invoiceheadtext = null;
            _sex = null;
            _age = null;
            _consumertype = null;
            _source = null;
            _sendtype = null;
            _address = null;
            _addresstype = null;
            _zipcode = null;
            _country = null;
            _province = null;
            _city = null;
            _county = null;
            _street = null;
            _phone = null;
            _cardno = null;
            _sendcardchannel = null;
            _cardtype = null;
            _birthday = new DateTime();
            _consumetype = null;
            _activearea = null;
            _ismember = 0;
            _createuser = null;
            _createtime = new DateTime();
            _upduser = null;
            _updtime = new DateTime();
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 自增ID
        /// </summary>		
        public long Id
        {
            get { return _id; }
            set { _isChanged |= (_id != value); _id = value; RaisePropertyChanged("Id"); }
        }

        /// <summary>
        /// 客户代码
        /// </summary>		
        public string ConsumerNo
        {
            get { return _consumerno; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for ConsumerNo", value, value.ToString());

                _isChanged |= (_consumerno != value); _consumerno = value; RaisePropertyChanged("ConsumerNo");
            }
        }

        /// <summary>
        /// 客户名称
        /// </summary>		
        public string ConsumerName
        {
            get { return _consumername; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for ConsumerName", value, value.ToString());

                _isChanged |= (_consumername != value); _consumername = value; RaisePropertyChanged("ConsumerName");
            }
        }

        /// <summary>
        /// 客户帐号
        /// </summary>		
        public string AccountNumber
        {
            get { return _accountnumber; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for AccountNumber", value, value.ToString());

                _isChanged |= (_accountnumber != value); _accountnumber = value; RaisePropertyChanged("AccountNumber");
            }
        }

        /// <summary>
        /// 发票抬头
        /// </summary>		
        public string InvoiceHeadText
        {
            get { return _invoiceheadtext; }
            set
            {
                if (value != null && value.Length > 25)
                    throw new ArgumentOutOfRangeException("Invalid value for InvoiceHeadText", value, value.ToString());

                _isChanged |= (_invoiceheadtext != value); _invoiceheadtext = value; RaisePropertyChanged("InvoiceHeadText");
            }
        }

        /// <summary>
        /// 性别
        /// </summary>		
        public string Sex
        {
            get { return _sex; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Sex", value, value.ToString());

                _isChanged |= (_sex != value); _sex = value; RaisePropertyChanged("Sex");
            }
        }

        /// <summary>
        /// 年龄
        /// </summary>		
        public string Age
        {
            get { return _age; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Age", value, value.ToString());

                _isChanged |= (_age != value); _age = value; RaisePropertyChanged("Age");
            }
        }

        /// <summary>
        /// 客户类型
        /// </summary>		
        public string ConsumerType
        {
            get { return _consumertype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ConsumerType", value, value.ToString());

                _isChanged |= (_consumertype != value); _consumertype = value; RaisePropertyChanged("ConsumerType");
            }
        }

        /// <summary>
        /// 客户来源
        /// </summary>		
        public string Source
        {
            get { return _source; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for Source", value, value.ToString());

                _isChanged |= (_source != value); _source = value; RaisePropertyChanged("Source");
            }
        }

        /// <summary>
        /// 送货方式
        /// </summary>		
        public string SendType
        {
            get { return _sendtype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for SendType", value, value.ToString());

                _isChanged |= (_sendtype != value); _sendtype = value; RaisePropertyChanged("SendType");
            }
        }

        /// <summary>
        /// 地址
        /// </summary>		
        public string Address
        {
            get { return _address; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Address", value, value.ToString());

                _isChanged |= (_address != value); _address = value; RaisePropertyChanged("Address");
            }
        }

        /// <summary>
        /// 地址类型
        /// </summary>		
        public string AddressType
        {
            get { return _addresstype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for AddressType", value, value.ToString());

                _isChanged |= (_addresstype != value); _addresstype = value; RaisePropertyChanged("AddressType");
            }
        }

        /// <summary>
        /// 邮政编码
        /// </summary>		
        public string ZipCode
        {
            get { return _zipcode; }
            set
            {
                if (value != null && value.Length > 6)
                    throw new ArgumentOutOfRangeException("Invalid value for ZipCode", value, value.ToString());

                _isChanged |= (_zipcode != value); _zipcode = value; RaisePropertyChanged("ZipCode");
            }
        }

        /// <summary>
        /// 国家地区
        /// </summary>		
        public string Country
        {
            get { return _country; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for Country", value, value.ToString());

                _isChanged |= (_country != value); _country = value; RaisePropertyChanged("Country");
            }
        }

        /// <summary>
        /// 省/市/自治区
        /// </summary>		
        public string Province
        {
            get { return _province; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for Province", value, value.ToString());

                _isChanged |= (_province != value); _province = value; RaisePropertyChanged("Province");
            }
        }

        /// <summary>
        /// 市
        /// </summary>		
        public string City
        {
            get { return _city; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for City", value, value.ToString());

                _isChanged |= (_city != value); _city = value; RaisePropertyChanged("City");
            }
        }

        /// <summary>
        /// 县
        /// </summary>		
        public string County
        {
            get { return _county; }
            set
            {
                if (value != null && value.Length > 10)
                    throw new ArgumentOutOfRangeException("Invalid value for County", value, value.ToString());

                _isChanged |= (_county != value); _county = value; RaisePropertyChanged("County");
            }
        }

        /// <summary>
        /// 街道
        /// </summary>		
        public string Street
        {
            get { return _street; }
            set
            {
                if (value != null && value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for Street", value, value.ToString());

                _isChanged |= (_street != value); _street = value; RaisePropertyChanged("Street");
            }
        }

        /// <summary>
        /// 手机号码
        /// </summary>		
        public string Phone
        {
            get { return _phone; }
            set
            {
                if (value != null && value.Length > 11)
                    throw new ArgumentOutOfRangeException("Invalid value for Phone", value, value.ToString());

                _isChanged |= (_phone != value); _phone = value; RaisePropertyChanged("Phone");
            }
        }

        /// <summary>
        /// 会员卡号
        /// </summary>		
        public string CardNo
        {
            get { return _cardno; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CardNo", value, value.ToString());

                _isChanged |= (_cardno != value); _cardno = value; RaisePropertyChanged("CardNo");
            }
        }

        /// <summary>
        /// 发卡渠道
        /// </summary>		
        public string SendCardChannel
        {
            get { return _sendcardchannel; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for SendCardChannel", value, value.ToString());

                _isChanged |= (_sendcardchannel != value); _sendcardchannel = value; RaisePropertyChanged("SendCardChannel");
            }
        }

        /// <summary>
        /// 卡类型
        /// </summary>		
        public string CardType
        {
            get { return _cardtype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for CardType", value, value.ToString());

                _isChanged |= (_cardtype != value); _cardtype = value; RaisePropertyChanged("CardType");
            }
        }

        /// <summary>
        /// 客户生日
        /// </summary>		
        public DateTime Birthday
        {
            get { return _birthday; }
            set { _isChanged |= (_birthday != value); _birthday = value; RaisePropertyChanged("Birthday"); }
        }

        /// <summary>
        /// 消费类型
        /// </summary>		
        public string ConsumeType
        {
            get { return _consumetype; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ConsumeType", value, value.ToString());

                _isChanged |= (_consumetype != value); _consumetype = value; RaisePropertyChanged("ConsumeType");
            }
        }

        /// <summary>
        /// 活动区域
        /// </summary>		
        public string ActiveArea
        {
            get { return _activearea; }
            set
            {
                if (value != null && value.Length > 20)
                    throw new ArgumentOutOfRangeException("Invalid value for ActiveArea", value, value.ToString());

                _isChanged |= (_activearea != value); _activearea = value; RaisePropertyChanged("ActiveArea");
            }
        }

        /// <summary>
        /// 是否是会员
        /// </summary>		
        public long IsMember
        {
            get { return _ismember; }
            set { _isChanged |= (_ismember != value); _ismember = value; RaisePropertyChanged("IsMember"); }
        }

        /// <summary>
        /// 创建人
        /// </summary>		
        public string CreateUser
        {
            get { return _createuser; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for CreateUser", value, value.ToString());

                _isChanged |= (_createuser != value); _createuser = value; RaisePropertyChanged("CreateUser");
            }
        }

        /// <summary>
        /// 创建时间
        /// </summary>		
        public DateTime CreateTime
        {
            get { return _createtime; }
            set { _isChanged |= (_createtime != value); _createtime = value; RaisePropertyChanged("CreateTime"); }
        }

        /// <summary>
        /// 修改人
        /// </summary>		
        public string UpdUser
        {
            get { return _upduser; }
            set
            {
                if (value != null && value.Length > 30)
                    throw new ArgumentOutOfRangeException("Invalid value for UpdUser", value, value.ToString());

                _isChanged |= (_upduser != value); _upduser = value; RaisePropertyChanged("UpdUser");
            }
        }

        /// <summary>
        /// 修改时间
        /// </summary>		
        public DateTime UpdTime
        {
            get { return _updtime; }
            set { _isChanged |= (_updtime != value); _updtime = value; RaisePropertyChanged("UpdTime"); }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsChanged
        {
            get { return _isChanged; }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsDeleted
        {
            get { return _isDeleted; }
        }

        #endregion


        #region Public Functions

        /// <summary>
        /// mark the item as deleted
        /// </summary>
        public void MarkAsDeleted()
        {
            _isDeleted = true;
            _isChanged = true;
        }

        #endregion


    }
}
