/*
insert license info here
*/
using System;

namespace DataAccess.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class PayManage
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private long _id; 
		private string _payno; 
		private string _postransno; 
		private string _ordersno; 
		private string _paydetailno; 
		private long _paytype; 
		private float _paymoney; 
		private string _payway; 
		private long _status; 
		private DateTime _paytime; 
		private long _isfoot; 
		private DateTime _foottime; 
		private DateTime _ownertime; 
		private string _createuser; 
		private DateTime _createtime; 
		private string _upduser; 
		private DateTime _updtime; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public PayManage()
		{
			_id = 0; 
			_payno = null; 
			_postransno = null; 
			_ordersno = null; 
			_paydetailno = null; 
			_paytype = 0; 
			_paymoney = 0; 
			_payway = null; 
			_status = 0; 
			_paytime = new DateTime(); 
			_isfoot = 0; 
			_foottime = new DateTime(); 
			_ownertime = new DateTime(); 
			_createuser = null; 
			_createtime = new DateTime(); 
			_upduser = null; 
			_updtime = new DateTime(); 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public long Id
		{
			get { return _id; }
			set { _isChanged |= (_id != value); _id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PayNo
		{
			get { return _payno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for PayNo", value, value.ToString());
				
				_isChanged |= (_payno != value); _payno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PosTransNo
		{
			get { return _postransno; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for PosTransNo", value, value.ToString());
				
				_isChanged |= (_postransno != value); _postransno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OrdersNo
		{
			get { return _ordersno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for OrdersNo", value, value.ToString());
				
				_isChanged |= (_ordersno != value); _ordersno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PayDetailNo
		{
			get { return _paydetailno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for PayDetailNo", value, value.ToString());
				
				_isChanged |= (_paydetailno != value); _paydetailno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public long PayType
		{
			get { return _paytype; }
			set { _isChanged |= (_paytype != value); _paytype = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public float PayMoney
		{
			get { return _paymoney; }
			set { _isChanged |= (_paymoney != value); _paymoney = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PayWay
		{
			get { return _payway; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for PayWay", value, value.ToString());
				
				_isChanged |= (_payway != value); _payway = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public long Status
		{
			get { return _status; }
			set { _isChanged |= (_status != value); _status = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime PayTime
		{
			get { return _paytime; }
			set { _isChanged |= (_paytime != value); _paytime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public long IsFoot
		{
			get { return _isfoot; }
			set { _isChanged |= (_isfoot != value); _isfoot = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime FootTime
		{
			get { return _foottime; }
			set { _isChanged |= (_foottime != value); _foottime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime OwnerTime
		{
			get { return _ownertime; }
			set { _isChanged |= (_ownertime != value); _ownertime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CreateUser
		{
			get { return _createuser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for CreateUser", value, value.ToString());
				
				_isChanged |= (_createuser != value); _createuser = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime CreateTime
		{
			get { return _createtime; }
			set { _isChanged |= (_createtime != value); _createtime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string UpdUser
		{
			get { return _upduser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for UpdUser", value, value.ToString());
				
				_isChanged |= (_upduser != value); _upduser = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime UpdTime
		{
			get { return _updtime; }
			set { _isChanged |= (_updtime != value); _updtime = value; }
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
