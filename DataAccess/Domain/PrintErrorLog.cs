/*
insert license info here
*/
using System;

namespace DataAccess.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class PrintErrorLog
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private long _id; 
		private DateTime _opertime; 
		private string _orderno; 
		private string _operuserno; 
		private string _errormessage; 
		private string _printerno; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public PrintErrorLog()
		{
			_id = 0; 
			_opertime = new DateTime(); 
			_orderno = null; 
			_operuserno = null; 
			_errormessage = null; 
			_printerno = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public long Id
		{
			get { return _id; }
			set { _isChanged |= (_id != value); _id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime OperTime
		{
			get { return _opertime; }
			set { _isChanged |= (_opertime != value); _opertime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OrderNo
		{
			get { return _orderno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for OrderNo", value, value.ToString());
				
				_isChanged |= (_orderno != value); _orderno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OperUserNo
		{
			get { return _operuserno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for OperUserNo", value, value.ToString());
				
				_isChanged |= (_operuserno != value); _operuserno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ErrorMessage
		{
			get { return _errormessage; }
			set	
			{
				if( value!= null && value.Length > 100)
					throw new ArgumentOutOfRangeException("Invalid value for ErrorMessage", value, value.ToString());
				
				_isChanged |= (_errormessage != value); _errormessage = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PrinterNo
		{
			get { return _printerno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for PrinterNo", value, value.ToString());
				
				_isChanged |= (_printerno != value); _printerno = value;
			}
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
