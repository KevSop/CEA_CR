/*
insert license info here
*/
using System;
using Microsoft.Practices.Prism.ViewModel;
namespace DataAccess.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class CompanyManage : NotificationObject
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private long _id; 
		private string _merchantno; 
		private string _loginname; 
		private string _password; 
		private string _companyname; 
		private string _groupname; 
		private string _leadername; 
		private string _ename; 
		private string _registerno; 
		private string _registerplace_country; 
		private string _registerplace_province; 
		private string _registerplace_city; 
		private string _registerplace_county; 
		private string _registerplace_street; 
		private string _officeplace_country; 
		private string _officeplace_province; 
		private string _officeplace_city; 
		private string _officeplace_county; 
		private string _officeplace_street; 
		private string _zipcode; 
		private string _contactpeople; 
		private string _peopletel; 
		private string _peopleemail; 
		private string _website; 
		private string _businessno; 
		private byte[] _logo; 
		private string _createuser; 
		private DateTime _createtime; 
		private string _upduser; 
		private DateTime _updtime; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public CompanyManage()
		{
			_id = 0; 
			_merchantno = null; 
			_loginname = null; 
			_password = null; 
			_companyname = null; 
			_groupname = null; 
			_leadername = null; 
			_ename = null; 
			_registerno = null; 
			_registerplace_country = null; 
			_registerplace_province = null; 
			_registerplace_city = null; 
			_registerplace_county = null; 
			_registerplace_street = null; 
			_officeplace_country = null; 
			_officeplace_province = null; 
			_officeplace_city = null; 
			_officeplace_county = null; 
			_officeplace_street = null; 
			_zipcode = null; 
			_contactpeople = null; 
			_peopletel = null; 
			_peopleemail = null; 
			_website = null; 
			_businessno = null; 
			_logo = new byte[]{}; 
			_createuser = null; 
			_createtime = new DateTime(); 
			_upduser = null; 
			_updtime = new DateTime(); 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public long Id
		{
			get { return _id; }
            set { _isChanged |= (_id != value); _id = value; RaisePropertyChanged("Id"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MerchantNo
		{
			get { return _merchantno; }
			set	
			{
				if( value!= null && value.Length > 16)
					throw new ArgumentOutOfRangeException("Invalid value for MerchantNo", value, value.ToString());

                _isChanged |= (_merchantno != value); _merchantno = value; RaisePropertyChanged("MerchantNo");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string LoginName
		{
			get { return _loginname; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for LoginName", value, value.ToString());

                _isChanged |= (_loginname != value); _loginname = value; RaisePropertyChanged("LoginName");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PassWord
		{
			get { return _password; }
			set	
			{
				if( value!= null && value.Length > 32)
					throw new ArgumentOutOfRangeException("Invalid value for PassWord", value, value.ToString());

                _isChanged |= (_password != value); _password = value; RaisePropertyChanged("PassWord");

			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CompanyName
		{
			get { return _companyname; }
			set	
			{
				if( value!= null && value.Length > 25)
					throw new ArgumentOutOfRangeException("Invalid value for CompanyName", value, value.ToString());

                _isChanged |= (_companyname != value); _companyname = value; RaisePropertyChanged("CompanyName");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string GroupName
		{
			get { return _groupname; }
			set	
			{
				if( value!= null && value.Length > 25)
					throw new ArgumentOutOfRangeException("Invalid value for GroupName", value, value.ToString());

                _isChanged |= (_groupname != value); _groupname = value; RaisePropertyChanged("GroupName");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string LeaderName
		{
			get { return _leadername; }
			set	
			{
				if( value!= null && value.Length > 25)
					throw new ArgumentOutOfRangeException("Invalid value for LeaderName", value, value.ToString());

                _isChanged |= (_leadername != value); _leadername = value; RaisePropertyChanged("LeaderName");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string Ename
		{
			get { return _ename; }
			set	
			{
				if( value!= null && value.Length > 25)
					throw new ArgumentOutOfRangeException("Invalid value for Ename", value, value.ToString());

                _isChanged |= (_ename != value); _ename = value; RaisePropertyChanged("Ename");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string RegisterNo
		{
			get { return _registerno; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for RegisterNo", value, value.ToString());

                _isChanged |= (_registerno != value); _registerno = value; RaisePropertyChanged("RegisterNo");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string RegisterPlaceCountry
		{
			get { return _registerplace_country; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for RegisterPlaceCountry", value, value.ToString());

                _isChanged |= (_registerplace_country != value); _registerplace_country = value; RaisePropertyChanged("RegisterPlaceCountry");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string RegisterPlaceProvince
		{
			get { return _registerplace_province; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for RegisterPlaceProvince", value, value.ToString());

                _isChanged |= (_registerplace_province != value); _registerplace_province = value; RaisePropertyChanged("RegisterPlaceProvince");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string RegisterPlaceCity
		{
			get { return _registerplace_city; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for RegisterPlaceCity", value, value.ToString());

                _isChanged |= (_registerplace_city != value); _registerplace_city = value; RaisePropertyChanged("RegisterPlaceCity");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string RegisterPlaceCounty
		{
			get { return _registerplace_county; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for RegisterPlaceCounty", value, value.ToString());

                _isChanged |= (_registerplace_county != value); _registerplace_county = value; RaisePropertyChanged("RegisterPlaceCounty");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string RegisterPlaceStreet
		{
			get { return _registerplace_street; }
			set	
			{
				if( value!= null && value.Length >50)
					throw new ArgumentOutOfRangeException("Invalid value for RegisterPlaceStreet", value, value.ToString());

                _isChanged |= (_registerplace_street != value); _registerplace_street = value; RaisePropertyChanged("RegisterPlaceStreet");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OfficePlaceCountry
		{
			get { return _officeplace_country; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for OfficePlaceCountry", value, value.ToString());

                _isChanged |= (_officeplace_country != value); _officeplace_country = value; RaisePropertyChanged("OfficePlaceCountry");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OfficePlaceProvince
		{
			get { return _officeplace_province; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for OfficePlaceProvince", value, value.ToString());

                _isChanged |= (_officeplace_province != value); _officeplace_province = value; RaisePropertyChanged("OfficePlaceProvince");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OfficePlaceCity
		{
			get { return _officeplace_city; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for OfficePlaceCity", value, value.ToString());

                _isChanged |= (_officeplace_city != value); _officeplace_city = value; RaisePropertyChanged("OfficePlaceCity");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OfficePlaceCounty
		{
			get { return _officeplace_county; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for OfficePlaceCounty", value, value.ToString());

                _isChanged |= (_officeplace_county != value); _officeplace_county = value; RaisePropertyChanged("OfficePlaceCounty");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OfficePlaceStreet
		{
			get { return _officeplace_street; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for OfficePlaceStreet", value, value.ToString());

                _isChanged |= (_officeplace_street != value); _officeplace_street = value; RaisePropertyChanged("OfficePlaceStreet");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ZipCode
		{
			get { return _zipcode; }
			set	
			{
				if( value!= null && value.Length > 6)
					throw new ArgumentOutOfRangeException("Invalid value for ZipCode", value, value.ToString());

                _isChanged |= (_zipcode != value); _zipcode = value; RaisePropertyChanged("ZipCode");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string ContactPeople
		{
			get { return _contactpeople; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for ContactPeople", value, value.ToString());

                _isChanged |= (_contactpeople != value); _contactpeople = value; RaisePropertyChanged("ContactPeople");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PeopleTel
		{
			get { return _peopletel; }
			set	
			{
				if( value!= null && value.Length > 11)
					throw new ArgumentOutOfRangeException("Invalid value for PeopleTel", value, value.ToString());

                _isChanged |= (_peopletel != value); _peopletel = value; RaisePropertyChanged("PeopleTel");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PeopleEmail
		{
			get { return _peopleemail; }
			set	
			{
				if( value!= null && value.Length > 20)
					throw new ArgumentOutOfRangeException("Invalid value for PeopleEmail", value, value.ToString());

                _isChanged |= (_peopleemail != value); _peopleemail = value; RaisePropertyChanged("PeopleEmail");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string WebSite
		{
			get { return _website; }
			set	
			{
				if( value!= null && value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for WebSite", value, value.ToString());

                _isChanged |= (_website != value); _website = value; RaisePropertyChanged("WebSite");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string BusinessNo
		{
			get { return _businessno; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for BusinessNo", value, value.ToString());

                _isChanged |= (_businessno != value); _businessno = value; RaisePropertyChanged("BusinessNo");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public byte[] Logo
		{
			get { return _logo; }
            set { _isChanged |= (_logo != value); _logo = value; RaisePropertyChanged("Logo"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string CreateUser
		{
			get { return _createuser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for CreateUser", value, value.ToString());

                _isChanged |= (_createuser != value); _createuser = value; RaisePropertyChanged("CreateUser");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime CreateTime
		{
			get { return _createtime; }
            set { _isChanged |= (_createtime != value); _createtime = value; RaisePropertyChanged("CreateTime"); }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string UpdUser
		{
			get { return _upduser; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for UpdUser", value, value.ToString());

                _isChanged |= (_upduser != value); _upduser = value; RaisePropertyChanged("UpdUser");
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime UpdTime
		{
			get { return _updtime; }
            set { _isChanged |= (_updtime != value); _updtime = value; RaisePropertyChanged("UpdTime"); }
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
