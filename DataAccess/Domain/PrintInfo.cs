/*
insert license info here
*/
using System;

namespace DataAccess.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the IBatis Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class PrintInfo
	{
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private long _id; 
		private string _planno; 
		private string _menuno; 
		private string _menutype; 
		private string _printerno; 
		private string _orderno; 
		private string _seatno; 
		private string _operuserno; 
		private long _peoplecount; 
		private DateTime _printtime; 
		private string _printstatus; 		
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public PrintInfo()
		{
			_id = 0; 
			_planno = null; 
			_menuno = null; 
			_menutype = null; 
			_printerno = null; 
			_orderno = null; 
			_seatno = null; 
			_operuserno = null; 
			_peoplecount = 0; 
			_printtime = new DateTime(); 
			_printstatus = null; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		public long Id
		{
			get { return _id; }
			set { _isChanged |= (_id != value); _id = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PlanNo
		{
			get { return _planno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for PlanNo", value, value.ToString());
				
				_isChanged |= (_planno != value); _planno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MenuNo
		{
			get { return _menuno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for MenuNo", value, value.ToString());
				
				_isChanged |= (_menuno != value); _menuno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string MenuType
		{
			get { return _menutype; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for MenuType", value, value.ToString());
				
				_isChanged |= (_menutype != value); _menutype = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PrinterNo
		{
			get { return _printerno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for PrinterNo", value, value.ToString());
				
				_isChanged |= (_printerno != value); _printerno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OrderNo
		{
			get { return _orderno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for OrderNo", value, value.ToString());
				
				_isChanged |= (_orderno != value); _orderno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string SeatNo
		{
			get { return _seatno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for SeatNo", value, value.ToString());
				
				_isChanged |= (_seatno != value); _seatno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string OperUserNo
		{
			get { return _operuserno; }
			set	
			{
				if( value!= null && value.Length > 30)
					throw new ArgumentOutOfRangeException("Invalid value for OperUserNo", value, value.ToString());
				
				_isChanged |= (_operuserno != value); _operuserno = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public long PeopleCount
		{
			get { return _peoplecount; }
			set { _isChanged |= (_peoplecount != value); _peoplecount = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public DateTime PrintTime
		{
			get { return _printtime; }
			set { _isChanged |= (_printtime != value); _printtime = value; }
		}
			
		/// <summary>
		/// 
		/// </summary>		
		public string PrintStatus
		{
			get { return _printstatus; }
			set	
			{
				if( value!= null && value.Length > 10)
					throw new ArgumentOutOfRangeException("Invalid value for PrintStatus", value, value.ToString());
				
				_isChanged |= (_printstatus != value); _printstatus = value;
			}
		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		#endregion
		
		
	}
}
